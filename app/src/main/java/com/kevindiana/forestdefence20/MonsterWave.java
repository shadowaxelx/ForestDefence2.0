package com.kevindiana.forestdefence20;

import java.util.ArrayList;
import java.util.Random;

/**
 * Created by kevin on 1/4/2017.
 */

public class MonsterWave extends GameObject {

    // each array contains the wave so the first array is round 1
    // numbers 1 - 13 correspond with the monster from the Monster class
    // 0 means empty space(spawn nothing)
    // 14 means after all the monsters in the array are gone the game is over

    // map 1 easy
    private int[][] monsterroom11 = new int[][]{

            //{10},

            {1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2},
            {1, 1, 1, 2, 2, 2, 2, 1, 1, 2, 2, 2, 2, 1, 1},
            {3, 3, 2, 2, 3, 1, 1, 1, 3, 3, 2, 3, 3, 3},
            {4, 4, 3, 1, 1, 4, 1, 3, 4, 3, 3, 3, 4, 4},
            {5, 0, 0, 3, 0, 3, 3, 2, 2, 5, 4, 2, 4, 2, 4},
            {4, 0, 4, 0, 0, 7, 4, 3, 3, 3, 7, 2, 3, 3},
            {4, 8, 0, 0, 7, 8, 0, 0, 0, 4, 5, 4, 0, 0 , 6},
            {8, 9, 0, 0, 4, 4, 7, 0, 7, 3, 3, 3, 8, 0, 0, 0, 6, 7, 0, 0, 3, 3, 3},
            {10, 0, 0, 0, 9, 4, 0, 0, 0, 7, 4, 9, 7, 10},
            {11, 8, 10, 11, 6, 4, 4, 11, 12, 8, 8, 7},
            {12, 0, 0, 12, 11, 0, 0, 12, 11, 0, 0, 12, 12},
            {1, 1, 6, 2, 3, 2, 3, 4, 5, 7, 7, 8, 9, 10, 11, 9, 12},
            {13, 0, 0, 0, 12, 0, 0, 0, 10, 10, 10, 10, 10, 10, 14}


    };

    // map 1 normal
    private int[][] monsterroom12 = new int[][]{


            {1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1},
            {1, 2, 2, 2, 1, 2, 2, 1, 2, 2, 2, 1 ,2, 2,},
            {3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 6},
            {4, 4, 4, 4, 4, 3, 3, 4, 4, 3, 3, 4, 3, 2, 4, 2},
            {5, 4, 4, 2, 5, 5, 2, 5, 4, 2, 2, 2, 2},
            {7, 7, 7, 0, 0, 0, 0, 3, 3, 3, 3, 7, 4, 7, 4, 7, 0, 0, 6, 5, 7, 0, 0, 0, 3, 3, 3},
            {5, 0, 0, 5, 3, 8, 7, 8, 8, 4, 4, 7, 3, 8, 7, 7, 7,  0, 0, 0, 0, 3, 3, 3},
            {8, 8, 8, 9, 3, 4, 9, 9, 3, 4, 7, 8, 6, 7, 3, 3, 3, 3},
            {10, 10, 9, 7, 7, 6, 7, 9, 8, 9, 10, 9, 7, 10},
            {11, 7, 7, 10, 11, 6, 4, 4, 11, 12, 10, 10, 10},
            {12, 12, 11, 11, 12, 11, 12, 11, 12, 12 ,0, 0, 0, 0, 0, 0, 10, 10, 10, 10, 10, 10},
            {1, 1, 6, 2, 3, 2, 3, 4, 5, 7, 7, 8, 9, 10, 10, 11, 9, 12, 13, 13, 13, 11, 11, 11, 10, 10, 10, 10},
            {13, 13, 13, 13, 13, 13,  0, 0, 0, 0, 0, 10, 10, 10, 10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10}



    };

    private int[][] monsterroom14 = new int[][]{

            //{5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5},
           // {1},
/*
            {1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1},
            {2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2},
            {3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3},
            {4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4},
            {5, 5, 4, 4, 5, 5, 4, 5, 5, 4, 4, 4, 5, 4, 5, 5, 5},
            {5, 5, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6, 6, 6, 6, 6, 6},
            {7, 7, 7, 7, 7, 7, 7, 7, 7},
            {8, 8, 8, 8, 8, 8, 8, 8, 8},
            {9, 9, 9, 9, 9, 9, 9, 9, 9},
            {10, 10, 10, 10, 10, 10, 10},
            {11, 11, 11, 11, 11, 11, 11},
            {12, 12, 12, 12, 12, 12, 12},
            */
            {13, 13, 13, 13, 13, 13},


    };


    public int [][] infinite(int wave_number){


            monsterroom12 = new int [1][20];

            for(int i = 0; i < 20; i++){
                Random rn = new Random();
                int monster = rn.nextInt(13) + 1;

                monsterroom12[0][i] = monster;
            }

        return monsterroom12;
    }

    public int [][] getwave(int roomnum){
        switch(roomnum){
            // easy
            case 11:
                return monsterroom11;

            // normal
            case 12:
                return monsterroom12;

            // hard
            case 13:
                break;

            // infinite
            case 14:
                return monsterroom14;
        }

        return monsterroom12;
    }
}

